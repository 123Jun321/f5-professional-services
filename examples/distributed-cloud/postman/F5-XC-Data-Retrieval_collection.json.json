{
	"info": {
		"_postman_id": "2b894bf5-1332-428d-a068-f2f00aad24b0",
		"name": "F5 XC Data Retrieval",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Retrieve HTTP App Config (1 App)",
			"item": [
				{
					"name": "Set Collection Variables + Retrieve HTTP LB Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce4daad6-c593-456d-a47f-77099dddb550",
								"exec": [
									"//Get app name and http payload ",
									"const appName = pm.environment.get(\"app_name_1\");",
									"var jsonData = JSON.parse(responseBody);",
									"var jsonNamesData = jsonData.items;",
									"",
									"//Retrieve full http lb name from namespace configuration",
									"for(var i=0;i<jsonNamesData.length;i++){",
									"    lbName = jsonNamesData[i].name;",
									"    if (lbName.includes(appName)) {",
									"        pm.collectionVariables.set(\"lbName\", lbName);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "ab5cb166-0f06-4b2a-b5c7-6e29c7912345",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{voltconsole-host}}.console.ves.volterra.io/api/config/namespaces/{{namespace_1}}/http_loadbalancers?report_fields",
							"protocol": "https",
							"host": [
								"{{voltconsole-host}}",
								"console",
								"ves",
								"volterra",
								"io"
							],
							"path": [
								"api",
								"config",
								"namespaces",
								"{{namespace_1}}",
								"http_loadbalancers"
							],
							"query": [
								{
									"key": "report_fields",
									"value": null
								}
							]
						},
						"description": "Shared NamesSpace Sites"
					},
					"response": []
				},
				{
					"name": "HTTP LB Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f58e7ab-bcdd-4125-b201-5b6ff83a92b2",
								"exec": [
									"// get namespaces and set variables for object counts and payload",
									"var JSONobj = JSON.parse(responseBody);",
									"var poolName = JSONobj.spec.default_route_pools[0].pool.name;",
									"var LBMetadata = JSONobj.metadata;",
									"var LBSpec = JSONobj.spec;",
									"var LBConfig = JSON.parse(\"{\\\"metadata\\\" :\"+JSON.stringify(LBMetadata)+\",\"+\"\\\"spec\\\" :\"+JSON.stringify(LBSpec)+\"}\");",
									"",
									"pm.collectionVariables.set(\"poolName\", poolName);",
									"pm.collectionVariables.set(\"LBConfig\", JSON.stringify(LBConfig));",
									"",
									"/*",
									"for troubleshooting",
									"console.log(JSONobj);",
									"console.log(LBConfig);",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "a534c26d-c795-4d7a-84a3-36f3054d4f1f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/config/namespaces/{{namespace_1}}/http_loadbalancers/{{lbName}}",
						"description": "Shared NamesSpace Sites"
					},
					"response": []
				},
				{
					"name": "Origin Pool Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6825e733-169d-4ea5-8084-b8c49bc36fc3",
								"exec": [
									"// get namespaces and set variables for object counts and payload",
									"var JSONobj = JSON.parse(responseBody);",
									"var monitorName = JSONobj.spec.healthcheck[0].name;",
									"var poolMetadata = JSONobj.metadata;",
									"var poolSpec = JSONobj.spec;",
									"var poolConfig = JSON.parse(\"{\\\"metadata\\\" :\"+JSON.stringify(poolMetadata)+\",\"+\"\\\"spec\\\" :\"+JSON.stringify(poolSpec)+\"}\");",
									"",
									"pm.collectionVariables.set(\"monitorName\", monitorName);",
									"pm.collectionVariables.set(\"poolConfig\", JSON.stringify(poolConfig));",
									"",
									"/*",
									"for troubleshooting",
									"console.log(JSONobj);",
									"console.log(poolConfig);",
									"*/",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "bcffb69f-7266-44c0-89b6-898de2d230c8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/config/namespaces/{{namespace_1}}/origin_pools/{{poolName}}",
						"description": "Shared NamesSpace Sites"
					},
					"response": []
				},
				{
					"name": "HealthCheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd097a62-d9c4-4fb5-9a6c-1af911e94554",
								"exec": [
									"// get namespaces and set variables for object counts and payload",
									"var JSONobj = JSON.parse(responseBody);",
									"var monitorMetadata = JSONobj.metadata;",
									"var moinitorSpec = JSONobj.spec;",
									"var monitorConfig = JSON.parse(\"{\\\"metadata\\\" :\"+JSON.stringify(monitorMetadata)+\",\"+\"\\\"spec\\\" :\"+JSON.stringify(moinitorSpec)+\"}\");",
									"pm.collectionVariables.set(\"monitorConfig\", JSON.stringify(monitorConfig));",
									"",
									"/*",
									"for troubleshooting",
									"console.log(JSONobj);",
									"console.log(poolConfig);",
									"*/",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9cf6f8b1-eaf3-43e7-a3c1-56d90c56ff63",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "5e7d7654-fb72-4188-b18c-48e45b712733",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/config/namespaces/{{namespace_1}}/healthchecks/{{monitorName}}",
						"description": "Shared NamesSpace Sites"
					},
					"response": []
				}
			],
			"_postman_id": "2c159ec5-9493-4f80-accc-75f6427a7374"
		},
		{
			"name": "Retrieve HTTP App Configs (1 Namespace)",
			"item": [
				{
					"name": "HTTP LB Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d07bd9ea-1694-48e9-8e89-e85a78b6ef43",
								"exec": [
									"//get configuration and set to collection variable",
									"pm.collectionVariables.set(\"LBConfig\", responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "34d04eb0-cec6-4757-8a2b-5b881806997f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{voltconsole-host}}.console.ves.volterra.io/api/config/namespaces/{{namespace_1}}/http_loadbalancers?report_fields",
							"protocol": "https",
							"host": [
								"{{voltconsole-host}}",
								"console",
								"ves",
								"volterra",
								"io"
							],
							"path": [
								"api",
								"config",
								"namespaces",
								"{{namespace_1}}",
								"http_loadbalancers"
							],
							"query": [
								{
									"key": "report_fields",
									"value": null
								}
							]
						},
						"description": "Shared NamesSpace Sites"
					},
					"response": []
				},
				{
					"name": "Origin Pool Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d07bd9ea-1694-48e9-8e89-e85a78b6ef43",
								"exec": [
									"//get configuration and set to collection variable",
									"pm.collectionVariables.set(\"poolConfig\", responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "d8eea1b8-9067-4920-84b4-8382fbed20c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{voltconsole-host}}.console.ves.volterra.io/api/config/namespaces/{{namespace_1}}/origin_pools?report_fields",
							"protocol": "https",
							"host": [
								"{{voltconsole-host}}",
								"console",
								"ves",
								"volterra",
								"io"
							],
							"path": [
								"api",
								"config",
								"namespaces",
								"{{namespace_1}}",
								"origin_pools"
							],
							"query": [
								{
									"key": "report_fields",
									"value": null
								}
							]
						},
						"description": "Shared NamesSpace Sites"
					},
					"response": []
				},
				{
					"name": "HealthCheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d07bd9ea-1694-48e9-8e89-e85a78b6ef43",
								"exec": [
									"//get configuration and set to collection variable",
									"pm.collectionVariables.set(\"monitorConfig\", responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "b3158d09-4be0-4425-8463-71cc199a5410",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{voltconsole-host}}.console.ves.volterra.io/api/config/namespaces/{{namespace_1}}/healthchecks?report_fields",
							"protocol": "https",
							"host": [
								"{{voltconsole-host}}",
								"console",
								"ves",
								"volterra",
								"io"
							],
							"path": [
								"api",
								"config",
								"namespaces",
								"{{namespace_1}}",
								"healthchecks"
							],
							"query": [
								{
									"key": "report_fields",
									"value": null
								}
							]
						},
						"description": "Shared NamesSpace Sites"
					},
					"response": []
				}
			],
			"_postman_id": "b3007e97-2c95-4725-b777-4b2259360eae"
		},
		{
			"name": "Retrieve WAF + HTTP Request Logs (1 App)",
			"item": [
				{
					"name": "HTTP LB Object Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd463f55-9f6a-4a4c-a39c-2c0c1cc5bccf",
								"exec": [
									"//Get app name and http payload ",
									"const appName = pm.environment.get(\"app_name_1\");",
									"var jsonData = JSON.parse(responseBody);",
									"var jsonNamesData = jsonData.items;",
									"",
									"//Retrieve full http lb name from namespace configuration",
									"for(var i=0;i<jsonNamesData.length;i++){",
									"    lbName = jsonNamesData[i].name;",
									"    if (lbName.includes(appName+\"-\")) {",
									"        pm.collectionVariables.set(\"lbName\", lbName);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8a360a86-3fdc-4e97-b8d6-73d75e334c87",
								"exec": [
									"const log_range = pm.environment.get(\"log_duration\")",
									"var moment = require(\"moment\");",
									"var dateFormat = \"YYYY-MM-DDTH:mm:ss.SSSZ\"",
									"var log_end_time = moment().utc().format(dateFormat);",
									"var numb = log_range.match(/\\d/g);",
									"numb = numb.join(\"\");",
									"",
									"//Determine if timelien is minutes or hours",
									"if (log_range.includes(\"min\")) {",
									"    var log_start_time = moment().subtract(numb, 'minutes').utc().format(dateFormat);",
									"    //console.log(\"Timeline \"+numb+\" minutes\");",
									"}",
									"else {",
									"    var log_start_time = moment().subtract(numb, 'hours').utc().format(dateFormat);",
									"    //console.log(\"Timeline is \"+numb+\" hours\");",
									"}",
									"",
									"//Set Collection variables for timeline",
									"pm.collectionVariables.set(\"log_start_time\", log_start_time);",
									"pm.collectionVariables.set(\"log_end_time\", log_end_time);"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "8d1fe623-b826-4e8d-a762-2810b7d6b4e4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{voltconsole-host}}.console.ves.volterra.io/api/config/namespaces/{{namespace_1}}/http_loadbalancers?report_fields",
							"protocol": "https",
							"host": [
								"{{voltconsole-host}}",
								"console",
								"ves",
								"volterra",
								"io"
							],
							"path": [
								"api",
								"config",
								"namespaces",
								"{{namespace_1}}",
								"http_loadbalancers"
							],
							"query": [
								{
									"key": "report_fields",
									"value": null
								}
							]
						},
						"description": "Shared NamesSpace Sites"
					},
					"response": []
				},
				{
					"name": "Retrieve HTTP Request Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "29d1917e-a4d7-49a9-9b8a-3ce3c7f3dcea",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "74da9578-3e1e-423c-9a04-779a56767bba",
								"exec": [
									"//get active WAF Rule Logs from namespaces that utliize WAF",
									"var lbName = pm.collectionVariables.get(\"lbName\");",
									"var currentNamespaceWAF = pm.environment.get(\"namespace_1\");",
									"var jsonData = JSON.parse(responseBody);",
									"var jsonWAFRulesHit = jsonData.total_hits;",
									"if ( jsonWAFRulesHit > 0 ) {",
									"    console.log (\"Total HTTP Requests on Namespace \"+currentNamespaceWAF+\" LB \"+lbName+\": \"+jsonWAFRulesHit);",
									"    //console.log(jsonData.logs);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "01395032-c3ad-42f4-a61b-7c53dfc73668",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"{vh_name=\\\"ves-io-http-loadbalancer-{{lbName}}\\\",rsp_code_class=~\\\"2xx|3xx|4xx|5xx\\\"}\",\n    \"namespace\": \"{{namespace_1}}\",\n    \"aggs\": {},\n    \"start_time\": \"{{log_start_time}}\",\n    \"end_time\": \"{{log_end_time}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/data/namespaces/{{namespace_1}}/access_logs"
					},
					"response": []
				},
				{
					"name": "Retrieve WAF Event Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "29d1917e-a4d7-49a9-9b8a-3ce3c7f3dcea",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "74da9578-3e1e-423c-9a04-779a56767bba",
								"exec": [
									"//get active WAF Rule Logs from namespaces that utliize WAF",
									"var lbName = pm.collectionVariables.get(\"lbName\");",
									"var currentNamespaceWAF = pm.environment.get(\"namespace_1\");",
									"var jsonData = JSON.parse(responseBody);",
									"var jsonWAFRulesHit = jsonData.total_hits;",
									"if ( jsonWAFRulesHit > 0 ) {",
									"    console.log (\"Total WAF Rule Hits on Namespace \"+currentNamespaceWAF+\" LB \"+lbName+\": \"+jsonWAFRulesHit);",
									"    //console.log(jsonData.events);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "5571f736-c211-4583-ae07-50c19a6b33a5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"{vh_name=\\\"ves-io-http-loadbalancer-{{lbName}}\\\"}\",\n    \"namespace\": \"{{namespace_1}}\",\n    \"aggs\": {},\n    \"start_time\": \"{{log_start_time}}\",\n    \"end_time\": \"{{log_end_time}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/data/namespaces/{{namespace_1}}/app_security/events"
					},
					"response": []
				},
				{
					"name": "Retrieve Malicious User Event Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "29d1917e-a4d7-49a9-9b8a-3ce3c7f3dcea",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "74da9578-3e1e-423c-9a04-779a56767bba",
								"exec": [
									"//get active WAF Rule Logs from namespaces that utliize WAF",
									"var lbName = pm.collectionVariables.get(\"lbName\");",
									"var currentNamespaceWAF = pm.environment.get(\"namespace_1\");",
									"var jsonData = JSON.parse(responseBody);",
									"var jsonWAFRulesHit = jsonData.total_hits;",
									"if ( jsonWAFRulesHit > 0 ) {",
									"    console.log (\"Total Malicious User Events on Namespace \"+currentNamespaceWAF+\" LB \"+lbName+\": \"+jsonWAFRulesHit);",
									"    //console.log(jsonData.logs);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "b1f808f2-9507-47b5-99e6-79b848f00050",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"{vh_name=\\\"ves-io-http-loadbalancer-{{lbName}}\\\"}\",\n    \"namespace\": \"{{namespace_1}}\",\n    \"aggs\": {},\n    \"start_time\": \"{{log_start_time}}\",\n    \"end_time\": \"{{log_end_time}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/data/namespaces/{{namespace_1}}/app_security/suspicious_user_logs"
					},
					"response": []
				},
				{
					"name": "Retrieve Bot Overview Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "29d1917e-a4d7-49a9-9b8a-3ce3c7f3dcea",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "74da9578-3e1e-423c-9a04-779a56767bba",
								"exec": [
									"//get active WAF Rule Logs from namespaces that utliize WAF",
									"var lbName = pm.collectionVariables.get(\"lbName\");",
									"var currentNamespaceWAF = pm.environment.get(\"namespace_1\");",
									"var jsonData = JSON.parse(responseBody);",
									"var jsonWAFRulesHit = jsonData.total;",
									"if ( jsonWAFRulesHit > 0 ) {",
									"    console.log (\"Bot Events on Namespace \"+currentNamespaceWAF+\" LB \"+lbName+\": \"+jsonWAFRulesHit);",
									"    console.log(jsonData);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "8e6b4ace-1652-437f-ac55-bda432a1e76d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"{vh_name=\\\"ves-io-http-loadbalancer-{{lbName}}\\\"}\",\n    \"namespace\": \"{{namespace_1}}\",\n    \"aggs\": {},\n    \"start_time\": \"{{log_start_time}}\",\n    \"end_time\": \"{{log_end_time}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/shape/bot/namespaces/{{namespace_1}}/reporting/traffic/overview"
					},
					"response": []
				}
			],
			"_postman_id": "1444a43a-6ec7-4a92-a2e8-d359089975e5"
		},
		{
			"name": "Retrieve WAF + HTTP Request Logs (Tenant)",
			"item": [
				{
					"name": "List All App Namespaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f14e2e50-c59e-4287-9080-0b704bfaabb9",
								"exec": [
									"// get namespace configuraiotn JSON body and save to collection variable",
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"namespaces_body\", responseBody); "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ed739ef6-aada-4c23-aa14-45239765c72f",
								"exec": [
									"const log_range = pm.environment.get(\"log_duration\")",
									"var moment = require(\"moment\");",
									"var dateFormat = \"YYYY-MM-DDTH:mm:ss.SSSZ\"",
									"var log_end_time = moment().utc().format(dateFormat);",
									"var numb = log_range.match(/\\d/g);",
									"numb = numb.join(\"\");",
									"",
									"//Determine if timelien is minutes or hours",
									"if (log_range.includes(\"min\")) {",
									"    var log_start_time = moment().subtract(numb, 'minutes').utc().format(dateFormat);",
									"    //console.log(\"Timeline \"+numb+\" minutes\");",
									"}",
									"else {",
									"    var log_start_time = moment().subtract(numb, 'hours').utc().format(dateFormat);",
									"    //console.log(\"Timeline is \"+numb+\" hours\");",
									"}",
									"",
									"//Set Collection variables for timeline",
									"pm.collectionVariables.set(\"log_start_time\", log_start_time);",
									"pm.collectionVariables.set(\"log_end_time\", log_end_time);"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "31cfa90c-25e8-4819-b352-5a51026dbbd3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/web/namespaces"
					},
					"response": []
				},
				{
					"name": "Retrieve WAF Event Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "29d1917e-a4d7-49a9-9b8a-3ce3c7f3dcea",
								"exec": [
									"let namespaces = pm.collectionVariables.get(\"namespaces\");",
									"if(!namespaces || namespaces.length == 0) {",
									"    namespaces = [\"TEST\"];",
									"    var jsonData = JSON.parse(pm.collectionVariables.get(\"namespaces_body\"));",
									"    var jsonNamesData = jsonData.items;",
									"    for(var i=0;i<jsonNamesData.length;i++){",
									"        testLength=jsonNamesData.length-1;",
									"        namespaces.push(jsonNamesData[i].name); ",
									"    }",
									"    pm.collectionVariables.unset(\"namespaces_body\");",
									"}",
									"let currentNamespace = namespaces.shift();",
									"pm.collectionVariables.set(\"namespace\", currentNamespace);",
									"pm.collectionVariables.set(\"namespaces\", namespaces);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "74da9578-3e1e-423c-9a04-779a56767bba",
								"exec": [
									"const namespaces = pm.collectionVariables.get(\"namespaces\");",
									"if (namespaces && namespaces.length > 0){",
									"    setTimeout(() => {  postman.setNextRequest(\"Retrieve WAF Event Logs\"); }, 300);",
									"    //postman.setNextRequest(\"Retrieve WAF Logs\");",
									"} else {",
									"    postman.setNextRequest(null);",
									"}",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//get active WAF Rule Logs from namespaces that utliize WAF",
									"let currentNamespaceWAF = pm.collectionVariables.get(\"namespace\");",
									"var jsonData = JSON.parse(responseBody);",
									"var jsonWAFRulesHit = jsonData.total_hits;",
									"if ( jsonWAFRulesHit > 0 ) {",
									"    console.log (\"Total WAF Rule Hits on Namespace \"+currentNamespaceWAF+\": \"+jsonWAFRulesHit);",
									"    //console.log(jsonData.events);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "2081a95d-9e33-47fd-ad3d-b73a4d54aaef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"namespace\": \"{{namespace}}\",\n    \"aggs\": {},\n    \"start_time\": \"{{log_start_time}}\",\n    \"end_time\": \"{{log_end_time}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/data/namespaces/{{namespace}}/app_security/events"
					},
					"response": []
				}
			],
			"_postman_id": "dcb1eaf5-d95c-4182-9ac6-f70bd0686487"
		},
		{
			"name": "Retrieve HTTP LB CNAMES (Tenant)",
			"item": [
				{
					"name": "List All App Namespaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f14e2e50-c59e-4287-9080-0b704bfaabb9",
								"exec": [
									"// get namespace configuraiotn JSON body and save to collection variable",
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"namespaces_body\", responseBody); "
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "6ca0b218-23e5-4ed5-a646-cff02c30584b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://{{voltconsole-host}}.console.ves.volterra.io/api/web/namespaces"
					},
					"response": []
				},
				{
					"name": "Get All Tenant CNAMES",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d07bd9ea-1694-48e9-8e89-e85a78b6ef43",
								"exec": [
									"const namespaces = pm.collectionVariables.get(\"namespaces\");",
									"if (namespaces && namespaces.length > 0){",
									"    postman.setNextRequest(\"Get All Tenant CNAMES\");",
									"} else {",
									"    postman.setNextRequest(null);",
									"}",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//get domain and cnames from LB objects in namespace",
									"var jsonData = JSON.parse(responseBody);",
									"var jsonNamesData = jsonData.items;",
									"var parsedData = \"\";",
									"for(var i=0;i<jsonNamesData.length;i++){",
									"    console.log(\"NAMESPACE: \"+jsonNamesData[i].namespace+\", HTTP_LB: \"+jsonNamesData[i].name+\", DOMAIN: \"+jsonNamesData[i].get_spec.domains+\", CNAME: \" +jsonNamesData[i].get_spec.host_name);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "82917d40-78ea-4e25-8331-01349f564365",
								"exec": [
									"let namespaces = pm.collectionVariables.get(\"namespaces\");",
									"if(!namespaces || namespaces.length == 0) {",
									"    namespaces = [\"TEST\"];",
									"    var jsonData = JSON.parse(pm.collectionVariables.get(\"namespaces_body\"));",
									"    var jsonNamesData = jsonData.items;",
									"    //console.log(jsonNamesData.length)",
									"    for(var i=0;i<jsonNamesData.length;i++){",
									"        testLength=jsonNamesData.length-1;",
									"        namespaces.push(jsonNamesData[i].name); ",
									"    }",
									"    pm.collectionVariables.unset(\"namespaces_body\");",
									"}",
									"let currentNamespace = namespaces.shift();",
									"pm.collectionVariables.set(\"namespace\", currentNamespace);",
									"pm.collectionVariables.set(\"namespaces\", namespaces);"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "5516d742-1922-4942-899b-b1026dde8626",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{voltconsole-host}}.console.ves.volterra.io/api/config/namespaces/{{namespace}}/http_loadbalancers?report_fields",
							"protocol": "https",
							"host": [
								"{{voltconsole-host}}",
								"console",
								"ves",
								"volterra",
								"io"
							],
							"path": [
								"api",
								"config",
								"namespaces",
								"{{namespace}}",
								"http_loadbalancers"
							],
							"query": [
								{
									"key": "report_fields",
									"value": null
								}
							]
						},
						"description": "Shared NamesSpace Sites"
					},
					"response": []
				}
			],
			"_postman_id": "c5b57ac5-0925-4b46-bbf1-c515a9a10a80"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": {
			"key": "Authorization",
			"value": "APIToken {{api_credential}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "cbef3380-9a4a-41d1-bbc2-86bdfd300cf4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9184f8ac-615a-4d9f-8918-77b49f3e6357",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}