---
##########################################################
# 
# Created by Steven Meisenzahl, there is no support for this playbook.
#
# This Playbook has been tested with the following tasks working
#
# This playbook uses the t-ha-vars.yaml file along with the hosts file, see ussage below;
#
#  ansible-playbook -vvv ha-setup.yaml -i /<path>/hosts -i /<path>/t-ha-vars.yaml
#
#########################################################
- name: Set up a BIG-IP HA pair
  hosts: ha
  connection: local
  gather_facts: false

  vars: 
    provider: 
      server: "{{ server_1 }}"
      user: "{{user_1}}"
      password: "{{password_1}}"
      server_port: 443
      validate_certs: no

    provider2: 
      server: "{{ server_2 }}"
      user: "{{user_2}}"
      password: "{{password_2}}"
      server_port: 443
      validate_certs: no
    
  tasks:
    - name: Create Self IP on Active
      bigip_selfip:
        address: "{{address_ha1}}"
        name: "{{name_ha1}}"
        netmask: "{{netmask_ha1}}"
        vlan: "{{vlan_ha1}}"
        allow_service: default
        provider: "{{provider}}"
      delegate_to: localhost

    - name: Create Self IP on Standby
      bigip_selfip:
        address: "{{address_ha2}}"
        name: "{{name_ha2}}"
        netmask: "{{netmask_ha2}}"
        vlan: "{{vlan_ha2}}"
        allow_service: default
        provider: "{{provider2}}"
      delegate_to: localhost

    - name: Configure device connectivity on Active device
      bigip_device_connectivity:
        config_sync_ip: "{{address_ha1}}"
        mirror_primary_address: "{{address_ha1}}"
        unicast_failover:
          - address: management-ip
          - address: "{{address_ha1}}"
        provider: "{{provider}}"
      delegate_to: localhost

    - name: Configure device connectivity on Stanby device
      bigip_device_connectivity:
        config_sync_ip: "{{address_ha2}}"
        mirror_primary_address: "{{address_ha2}}"
        unicast_failover:
          - address: management-ip
          - address: "{{address_ha2}}"
        provider: "{{provider2}}"
      delegate_to: localhost

    - name: Discover device for trust on BIG-IP1
      bigip_command:
        commands: 
         - modify /cm trust-domain Root add-device { device-ip "{{server_2}}" device-name "{{hostname2}}" username "{{user_2}}" password "{{password_2}}" ca-device true }
        provider: "{{provider}}"
      delegate_to: localhost

    - name: Create Sync-Failover group and add members
      bigip_command:
        commands:
         - create /cm device-group SyncFailover devices add { "{{hostname1}}" "{{hostname2}}" } type sync-failover auto-sync enabled incremental-config-sync-size-max 1024 save-on-auto-sync true
        provider: "{{provider}}"
      delegate_to: localhost

    - name: Wait 30 seconds for Failover group to update
      ansible.builtin.wait_for:
        timeout: 30
      delegate_to: localhost
    
    - name: Force failover back to Active
      bigip_command: 
        commands: run /sys failover standby
        provider: "{{provider2}}"
      delegate_to: localhost

    - name: Wait 10 seconds for Failback to Active
      ansible.builtin.wait_for:
        timeout: 10
      delegate_to: localhost

    - name: Force Initial Sync
      bigip_command: 
        commands: run /cm config-sync to-group SyncFailover
        provider: "{{provider}}"
      delegate_to: localhost

    - name: Wait 10 seconds for Sync
      ansible.builtin.wait_for:
        timeout: 10
      delegate_to: localhost

    - name: Confirm HA pair if formed
      bigip_command:
        provider: "{{provider}}" 
        commands:
          - show cm sync-status
        wait_for: 
          - result[0] contains "high-availability"
      delegate_to: localhost

    - name: Wait 10 seconds for HA confirmation
      ansible.builtin.wait_for:
        timeout: 10
      delegate_to: localhost

    - name: Sync configuration from device to group
      bigip_configsync_action:
        device_group: SyncFailover
        overwrite_config: yes
        sync_device_to_group: yes
        provider: "{{provider}}"
      delegate_to: localhost
