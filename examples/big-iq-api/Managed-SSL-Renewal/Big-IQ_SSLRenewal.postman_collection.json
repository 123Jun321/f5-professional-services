{
	"info": {
		"_postman_id": "45c5b715-8291-4c4f-b25f-c50a78ab4276",
		"name": "Big-IQ Work_V3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SSL Ops",
			"item": [
				{
					"name": "Cert & Key Manipulation",
					"item": [
						{
							"name": "Get list of certs",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pass}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/sys/file/ssl-cert/",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"sys",
										"file",
										"ssl-cert",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Cert ID based on cert_name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"// Extracting the token from the response and setting it as a global variable.\r",
											"\r",
											"jsonData.items.forEach(function(obj) {\r",
											"    if (obj.name != pm.environment.get(\"cert_name\")) {\r",
											"        return;\r",
											"    }\r",
											"    console.log(\"Name: \" + obj.name + \" ID: \" + obj.id); \r",
											"    pm.environment.set(\"cert_id\", obj.id);\r",
											"    pm.environment.set(\"cert_link\", obj.selfLink);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/sys/file/ssl-cert",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"sys",
										"file",
										"ssl-cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rdata = request.data.length;\r",
											"var minusOne = rdata - 1\r",
											"var headervalue = '0-' + minusOne.toString(10) + '/' + rdata.toString(10);\r",
											"pm.globals.set('cert_range', headervalue)\r",
											"\r",
											"console.log(headervalue);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{cert_range}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nEXAMPLEMIICtjCCAZ6gAwIBAgIEFnXLNTANBgkqhkiG9w0BAQsFADAdMQswCQYDVQQGEwJV\r\nUzEOMAwGA1UEAxMFYmlnaXEwHhcNMjExMjEwMTU0ODA1WhcNMjIxMjEwMTU0ODA1\r\nWjAdMQswCQYDVQQGEwJVUzEOMAwA1UEAxMFYmlnaXEwggEiMA0GCSqGSIb3DQEB\r\nAQUAA4IBDwAwggEKAoIBAQCuafyHuilksgIwijkgqJoN8wxkBBOj97cbniw0INJ3\r\n+VR/j/2mBUgOP+ExBZcd6/78QTYa5+SJyZbqTn9mfB4gjC29GqTaIewqibX4gG+g\r\na+U4JFDzC6QyZZiKzYR0FjlauQ9o6XUTAhpxoLgVIWGgQxJfP7X1UVRms32MRsAU\r\nW0gDztRsmbCWgwRwFPsAO1DK0+ujTn/FU06iEhIzXvbGlgR70sSYq6X60kwpXJO8\r\nhB9LMTDnBI2kJW0KSSmuE8LdOPFURTwSWFn6OZyrEnBLuaHt6/YrL0qB4JiqmfGf\r\n/5DdwAR1lDRCLLG4JGqcf9bhNG2nDttoAu7+viOzZgppAgMBAAEwDQYJKoZIhvcN\r\nAQELBQADggEBACMFQJOPe2mXu2H1tltNz7l1BdxBLvGfkrWkI1MgYfheRYwjgdbk\r\nIOuBrBbzh96v4PMZ9pr0RjEPC9Lu3Y2Iu8CaFyuXt0TBPe3wXUdqMh9NicfYljnU\r\nbR2qzV54z9rYtHL8KO0IkTv939Q1Z0i0GjT5cPbFgfr9T624n0fS2gU+/IbT9SJA\r\n5NDxkUpvnXHPaLZfQruSJfpdr0myfijoejc7XxgwEPqjufz6SCUX23JGRIaGKEPa\r\nNtszahNVI/PJMFjMbi62UIhY8/cX6/0Lk5moRJttZqv4mRM/Lhjya6f5Pnpt+crp\r\nXAKC6QpmohHmDYCwiPT/cTJqHf9R6FhKjOs=\r\n-----END CERTIFICATE-----\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/shared/file-transfer/uploads/{{cert_name}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"{{cert_name}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Install Cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"sslo_cert_jobid\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{cert_range}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "248",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filePath\": \"/var/config/rest/downloads/{{cert_name}}\",\r\n    \"itemName\": \"{{cert_name}}\",\r\n    \"itemPartition\": \"Common\",\r\n    \"command\": \"ADD_CERT\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace Existing Installed Cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"sslo_cert_jobid\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filePath\": \"/var/config/rest/downloads/{{cert_name}}\",\r\n\r\n    \"certReference\": {\r\n        \"link\": \"{{cert_link}}\"\r\n    },\r\n    \"command\": \"REPLACE_CERT\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Cert Status / Store CertID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"cert_id\", jsonData.id);\r",
											"    pm.environment.set(\"cert_link\", jsonData.certReference.link);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{key_range}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management/{{sslo_cert_jobid}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management",
										"{{sslo_cert_jobid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list of keys",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pass}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/sys/file/ssl-key/",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"sys",
										"file",
										"ssl-key",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key ID based on key_name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"// Extracting the token from the response and setting it as a global variable.\r",
											"\r",
											"jsonData.items.forEach(function(obj) {\r",
											"    if (obj.name != pm.environment.get(\"key_name\")) {\r",
											"        return;\r",
											"    }\r",
											"    console.log(\"Name: \" + obj.name + \" ID: \" + obj.id); \r",
											"    pm.environment.set(\"key_id\", obj.id);\r",
											"    pm.environment.set(\"key_link\", obj.selfLink);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/sys/file/ssl-key",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"sys",
										"file",
										"ssl-key"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rdata = request.data.length;\r",
											"var minusOne = rdata - 1\r",
											"var headervalue = '0-' + minusOne.toString(10) + '/' + rdata.toString(10);\r",
											"pm.globals.set('key_range', headervalue)\r",
											"\r",
											"console.log(headervalue);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{key_range}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN PRIVATE KEY-----\r\nEXAMPLEMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCuafyHuilksgIw\r\nijkgqJoN8wxkBBOj97cbniw0INJ3+VR/j/2mBUgOP+ExBZcd6/78QTYa5+SJyZbq\r\nTn9mfB4gjC29GqTaIewqibX4gG+ga+U4JFDzC6QyZZiKzYR0FjlauQ9o6XUTAhpx\r\noLgVIWGgQxJfP7X1UVRms32MRsAUW0gDztRsmbCWgwRwFPsAO1DK0+ujTn/FU06i\r\nEhIzXvbGlgR70sSYq6X60kwpXJO8hB9LMTDnBI2kJW0KSSmuE8LdOPFURTwSWFn6\r\nOZyrEnBLuaHt6/YrL0qB4JiqmfGf/5DdwAR1lDRCLLG4JGqcf9bhNG2nDttoAu7+\r\nviOzZgppAgMBAAECggEAUtamCXUC6f+eCJ3t6jQKD2wLy4kgJvWls2lZx1x7el4i\r\nov+p0muZwYeycTkjOfhQIYB4lyQ3tKwXiNDAkRahYKN1HrUGtiNwX3NtMRsZjt\r\nYs/k3rr9vq4AWJSqP1S64vsYdZTEdUW/d46FQAv9yVdx52lkK+L3+ltv2utTmZbC\r\nQwTY3fMnj3rjNvMCLnDgv9yfd7GH/VYv3bzluA83+NAxv9NaGIuN06yg+akkvdaY\r\nh9PQep69ll8Uuu2eKuzIP0HkDKs7qHwCMAmGvnO2i+33X1gZ8OOVEcuQpXS362fr\r\nbygGSBRzBHS5KTr34v9A00czPyHLDk5iawdtfL7xjQKBgQD12qBP4NfaPyV7dJlp\r\neF7PGL3QsFkw5bx0CJEfaevh9ifQ0RtoKMllHtP1C2vXLbQL1TQYFLg/cgNgPbnj\r\neZ4hAZH0RfuzzffDKXeWXeVzWM+rBbD2OAXs4PfHcSkeCnZG/Ei3mFO3ylFO75iv\r\nossABaaE2BWLWVUwp2VBDGikDwKBgQC1nJ469tJlnvzcMI1/HNZNyzVv+m0MoI5l\r\nyAGZNRlNxqJGH0eI8ryGbWvb4W7FkE6OOxdSa+DPq9LS5CTwyDopEPx4V763+p+2\r\nwBTL5n+5qxHf94HocdZXTyM06Ww+EGSszYbAD+qOovikouTCGzHkboPyBF29LW8o\r\nh+e41HeSBwKBgCw+Ze86FV5PUt1+xET4xocaer5dng9wqJNxHzy6ARsvA0dO+lGq\r\nVWP/QkGtBoE41lfyzGcxA19Xk0f0k8leD5j9AVkmZv+ap2XVxpGm4C3745NxeME2\r\nn8pbSfv4X1/qnhJ0QFnZ7eb7X9qGv8GL2GBuo+LwSCBFuVECLvSf2Qz9AoGAeoz1\r\nOVTVJT3j47Hfyabr9hLqPGYAsESn0obkjT4HlTQ0zJzO6Nrj3NJ5tiapWSfH2rKF\r\nSlkBmyGXYjgRtWln1c5gj9SmHgBBRlDXt8AS8Hc/2KJsRy6KNOByIYJiSH9HcFRA\r\nWdpjrVzL7Ez/kPxI7pyk7OuFVeMS34bWFyNIjIECgYAVZDbOxdmadsbysFXtG4xP\r\nLM0wCrjgW60DRP48oKTYqJ+myQ7Rz9TvgHtS00pjp+pQmLD7pwetlBwi5piMCu2q\r\n1PG6dJFd3719v/RCa7uABEoUEnEy680aep4lGBNr2+Av933dRvI18c8llrVHDnrS\r\nkraHnmANlAvCa+AkENWfew==\r\n-----END PRIVATE KEY-----\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/shared/file-transfer/uploads/{{key_name}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"{{key_name}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Install Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"sslo_key_jobid\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{key_range}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filePath\": \"/var/config/rest/downloads/{{key_name}}\",\r\n    \"itemName\": \"{{key_name}}\",\r\n    \"itemPartition\": \"Common\",\r\n    \"command\": \"ADD_KEY\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace Existing Installed Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"sslo_key_jobid\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filePath\": \"/var/config/rest/downloads/{{key_name}}\",\r\n\r\n    \"keyReference\": {\r\n        \"link\": \"{{key_link}}\"\r\n    },\r\n    \"command\": \"REPLACE_KEY\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Key Status / Store KeytID Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"key_id\", jsonData.id);\r",
											"    pm.environment.set(\"key_link\", jsonData.keyReference.link);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{key_range}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management/{{sslo_key_jobid}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management",
										"{{sslo_key_jobid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SSL Profile Manipulation",
					"item": [
						{
							"name": "Get Client SSL Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/profile/client-ssl/",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"ltm",
										"profile",
										"client-ssl",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Client SSL Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"client_ssl_id\", jsonData.id);\r",
											"        pm.environment.set(\"client_ssl_link\", jsonData.selfLink);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{clientsslprofile_name}}\",\r\n    \"partition\": \"Common\",\r\n    \"certKeyChain\": [\r\n        {\r\n            \"name\": \"{{clientsslprofile_name}}\",\r\n            \"certReference\": {\r\n                \"link\": \"{{cert_link}}\"\r\n            },\r\n            \"keyReference\": {\r\n                \"link\": \"{{key_link}}\"\r\n            }\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/profile/client-ssl",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"ltm",
										"profile",
										"client-ssl"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Client SSL Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/profile/client-ssl/{{client_ssl_id}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"ltm",
										"profile",
										"client-ssl",
										"{{client_ssl_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Renew Expiring Certificate",
					"item": [
						{
							"name": "Get Cert ID based on cert_name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"// Extracting the token from the response and setting it as a global variable.\r",
											"\r",
											"jsonData.items.forEach(function(obj) {\r",
											"    if (obj.name != pm.environment.get(\"cert_name\")) {\r",
											"        return;\r",
											"    }\r",
											"    console.log(\"Name: \" + obj.name + \" ID: \" + obj.id); \r",
											"    pm.environment.set(\"cert_id\", obj.id);\r",
											"    pm.environment.set(\"cert_link\", obj.selfLink);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/sys/file/ssl-cert",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"sys",
										"file",
										"ssl-cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rdata = request.data.length;\r",
											"var minusOne = rdata - 1\r",
											"var headervalue = '0-' + minusOne.toString(10) + '/' + rdata.toString(10);\r",
											"pm.globals.set('cert_range', headervalue)\r",
											"\r",
											"console.log(headervalue);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{cert_range}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nExampleMIICtjCCAZ6gAwIBAgIEFnXLNTANBgkqhkiG9w0BAQsFADAdMQswCQYDVQQGEwJV\r\nUzEOMAwGA1UEAxMFYmlnaXEwHhcNMjExMjEwMTU0ODA1WhcNMjIxMjEwMTU0ODA1\r\nWjAdMQswCQYDVQQGEwJVUzEOMAwGA1UEAxMFYmlnaXEwggEiMA0GCSqGSIb3DQEB\r\nAQUAA4IBDwAwggEKAoIBAQCuafyHuilksgIwijkgqJoN8wxkBBOj97cbniw0INJ3\r\n+VR/j/2mBUgOP+ExBZcd6/78QTYa5+SJyZbqTn9mfB4gjC29GqTaIewqibX4gG+g\r\na+U4JFDzC6QyZZiKzYR0FjlauQ9o6XUTAhpxoLgVIWGgQxJfP7X1UVRms32MRsAU\r\nW0gDztRsmbCWgwRwFPsAO1DK0+ujTn/FU06iEhIzXvbGlgR70sSYq6X60kwpXJO8\r\nhB9LMTDnBI2kJW0KSSmuE8LdOPFURTwSWFn6OZyrEnBLuaHt6/YrL0qB4JiqmfGf\r\n/5DdwAR1lDRCLLG4JGqcf9bhNG2nDttoAu7+viOzZgppAgMBAAEwDQYJKoZIhvcN\r\nAQELBQADggEBACMFQJOPe2mXu2H1tltNz7l1BdxBLvGfkrWkI1MgYfheRYwjgdbk\r\nIOuBrBbzh96v4PMZ9pr0RjEPC9Lu3Y2Iu8CaFyuXt0TBPe3wXUdqMh9NicfYljnU\r\nbR2qzV54z9rYtHL8KO0IkTv939Q1Z0i0GjT5cPbFgfr9T624n0fS2gU+/IbTSJA\r\n5NDxkUpvnXHPaLZfQruSJfpdr0myfijoejc7XxgwEPqjufz6SCUX23JGRIaGKEPa\r\nNtszahNVI/PJMFjMbi62UIhY8/cX6/0Lk5moRJttZqv4mRM/Lhjya6f5Pnpt+crp\r\nXAKC6QpmohHmDYCwiPT/cTJqHf9R6FhKjOs=\r\n-----END CERTIFICATE-----\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/shared/file-transfer/uploads/{{cert_name}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"{{cert_name}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace Existing Installed Cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"sslo_cert_jobid\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filePath\": \"/var/config/rest/downloads/{{cert_name}}\",\r\n\r\n    \"certReference\": {\r\n        \"link\": \"{{cert_link}}\"\r\n    },\r\n    \"command\": \"REPLACE_CERT\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Cert Status / Store CertID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"cert_id\", jsonData.id);\r",
											"    pm.environment.set(\"cert_link\", jsonData.certReference.link);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{key_range}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management/{{sslo_cert_jobid}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management",
										"{{sslo_cert_jobid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get BigIP DeviceID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"DeviceID_link\", jsonData.link);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pass}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"address\": \"10.10.30.11\"\r\n        //\"hostname\": \"bigip-a.example.local\"\r\n        //\"module\": \"adc-core\"\r\n}"
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/shared/device-reference-query",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"shared",
										"device-reference-query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Renewed Cert to BigIP Devices",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pass}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{cert_name}}\",\r\n    //    \"description\": \"some deploy task\",\r\n    \"deviceReferences\": [\r\n        {\r\n            //Multiple Links can be referenced here for multiple devices\r\n            \"link\": \"{{DeviceID_link}}\"\r\n        }\r\n    ],\r\n    \"reevaluate\": true,\r\n    //Skip evaluation and straight deploy\r\n    \"skipDistribution\": false,\r\n    \"skipVerifyConfig\": true,\r\n    //\"skipCurrentConfigRefresh\": true,\r\n    \"deploySpecifiedObjectsOnly\": false,\r\n    \"verificationOptions\": {\r\n        \"skipCrossModuleVerification\": true\r\n    },\r\n    \"refreshSharedConfig\": true,\r\n    \"objectsToDeployReferences\": [\r\n        {\r\n            \"link\": \"{{cert_link}}\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/deploy-configuration",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"deploy-configuration"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add new cert, key, SSL profile to VS",
					"item": [
						{
							"name": "Upload Cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Upload request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rdata = request.data.length;\r",
											"var minusOne = rdata - 1\r",
											"var headervalue = '0-' + minusOne.toString(10) + '/' + rdata.toString(10);\r",
											"pm.globals.set('cert_range', headervalue)\r",
											"\r",
											"console.log(headervalue);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{cert_range}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nEXAMPLEMIICtjCCAZ6gAwIBAgIEFnXLNTANBgkqhkiG9w0BAQsFADAdMQswCQYDVQQGEwJV\r\nUzEOMAwGA1UEAxMFYmlnaXEwHhcNMjExMjEwMTU0ODA1WhcNMjIxMjEwMTU0ODA1\r\nWjAdMQswCQYDVQQGEwJVUzEOMAwGA1UEAxMFYmlnaXEwggEiMA0GCSqGSIb3DQEB\r\nAQUAA4IBDwAwggEKAoIBAQCuafyHuilksgIwijkgqJoN8wxkBBOj97cbniw0INJ3\r\n+VR/j/2mBUgOP+ExBZcd6/78QTYa5+SJyZbqTn9mfB4gjC29GqTaIewqibX4gG+g\r\na+U4JFDzC6QyZZiKzYR0FjlauQ9o6XUTAhpxoLgVIWGgQxJfP7X1UVRms32MRsAU\r\nW0gDztRsmbCWgwRwFPsAO1DK0+ujTn/FU06iEhzXvbGlgR70sSYq6X60kwpXJO8\r\nhB9LMTDnBI2kJW0KSSmuE8LdOPFURTwSWFn6OZyrEnBLuaHt6/YrL0qB4JiqmfGf\r\n/5DdwAR1lDRCLLG4JGqcf9bhNG2nDttoAu7+viOzZgppAgMBAAEwDQYJKoZIhvcN\r\nAQELBQADggEBACMFQJOPe2mXu2H1tltNz7l1BdxBLvGfkrWkI1MgYfheRYwjgdbk\r\nIOuBrBbzh96v4PMZ9pr0RjEPC9Lu3Y2Iu8CaFyuXt0TBPe3wXUdqMh9NicfYljnU\r\nbR2qzV54z9rYtHL8KO0IkTv939Q1Z0i0GjT5cPbFgfr9T624n0fS2gU+/IbT9SJA\r\n5NDxkUpvnXHPaLZfQruSJfpdr0myfijoejc7XxgwEPqjufz6SCUX23JGRIaGKEPa\r\nNtszahNVI/PJMFjMbi62UIhY8/cX6/0Lk5moRJttZqv4mRM/Lhjya6f5Pnpt+crp\r\nXAKC6QpmohHmDYCwiPT/cTJqHf9R6FhKjOs=\r\n-----END CERTIFICATE-----\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/shared/file-transfer/uploads/{{cert_name}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"{{cert_name}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Install Cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"    // Parsing the response returned by the request.\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"sslo_cert_jobid\", jsonData.id);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{cert_range}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "248",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filePath\": \"/var/config/rest/downloads/{{cert_name}}\",\r\n    \"itemName\": \"{{cert_name}}\",\r\n    \"itemPartition\": \"Common\",\r\n    \"command\": \"ADD_CERT\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Cert Status / Store CertID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"cert_id\", jsonData.id);\r",
											"    pm.environment.set(\"cert_link\", jsonData.certReference.link);\r",
											"    pm.expect(jsonData.status).to.eq(\"FINISHED\");\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{key_range}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management/{{sslo_cert_jobid}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management",
										"{{sslo_cert_jobid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful Upload request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var rdata = request.data.length;\r",
											"var minusOne = rdata - 1\r",
											"var headervalue = '0-' + minusOne.toString(10) + '/' + rdata.toString(10);\r",
											"pm.globals.set('key_range', headervalue)\r",
											"\r",
											"console.log(headervalue);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{key_range}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN PRIVATE KEY-----\r\nEXAMPLEMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCuafyHuilksgIw\r\nijkgqJoN8wxkBBOj97cbniw0INJ3+VR/j/2mBUgOP+ExBZcd6/78QTYa5+SJyZbq\r\nTn9fB4gjC29GqTaIewqibX4gG+ga+U4JFDzC6QyZZiKzYR0FjlauQ9o6XUTAhpx\r\noLgVIWGgQxJfP7X1UVRms32MRsAUW0gDztRsmbCWgwRwFPsAO1DK0+ujTn/FU06i\r\nEhIzXvbGlgR70sSYq6X60kwpXJO8hB9LMTDnBI2kJW0KSSmuE8LdOPFURTwSWFn6\r\nOZyrEnBLuaHt6/YrL0qB4JiqmfGf/5DdwAR1lDRCLLG4JGqcf9bhNG2nDttoAu7+\r\nviOzZgppAgMBAAECggEAUtamCXUC6f+eCJ3t6jQKD2wLy4kgJvWls2lZx1x7el4i\r\nov+p0muZwKLYeycTkjOfhQIYB4lyQ3tKwXiNDAkRahYKN1HrUGtiNwX3NtMRsZjt\r\nYs/k3rr9vq4AWJSqP1S64vsYdZTEdUW/d46FQAv9yVdx52lkK+L3+ltv2utTmZbC\r\nQwTY3fMnj3rjNvMCLnDgv9yfd7GH/VYv3bzluA83+NAxv9NaGIuN06yg+akkvdaY\r\nh9PQep69ll8Uuu2eKuzIP0HkDKs7qHwCMAmGvnO2i+33X1gZ8OOVEcuQpXS362fr\r\nbygGSBRzBHS5KTr34v9A00czPyHLDk5iawdtfL7xjQKBgQD12qBP4NfaPyV7dJlp\r\neF7PGL3QsFkw5bx0CJEfaevh9ifQ0RtoKMllHtP1C2vXLbQL1TQYFLg/cgNgPbnj\r\neZ4hAZH0RfuzzffDKXeWXeVzWM+rBbD2OAXs4PfHcSkeCnZG/Ei3mFO3ylFO75iv\r\nossABaaE2BWLWVUwp2VBDGikDwKBgQC1nJ469tJlnvzcMI1/HNZNyzVv+m0MoI5l\r\nyAGZNRlNxqJGH0eI8ryGbWvb4W7FkE6OOxdSa+DPq9LS5CTwyDopEPx4V763+p+2\r\nwBTL5n+5qxHf94HocdZXTyM06Ww+EGSszYbAD+qOovikouTCGzHkboPyBF29LW8o\r\nh+e41HeSBwKBgCw+Ze86FV5PUt1+xET4xocaer5dng9wqJNxHzy6ARsvA0dO+lGq\r\nVWP/QkGtBoE41lfyzGcxA19Xk0f0k8leD5j9AVkmZv+ap2XVxpGm4C3745NxeME2\r\nn8pbSfv4X1/qnhJ0QFnZ7eb7X9qGv8GL2GBuo+LwSCBFuVECLvSf2Qz9AoGAeoz1\r\nOVTVJT3j47Hfyabr9hLqPGYAsESn0obkjT4HlTQ0zJzO6Nrj3NJ5tiapWSfH2rKF\r\nSlkBmyGXYjgRtWln1c5gj9SmHgBBRlDXt8AS8Hc/2KJsRy6KNOByIYJiSH9HcFRA\r\nWdpjrVzL7Ez/kPxI7pyk7OuFVeMS34bWFyNIjIECgYAVZDbOxdmadsbysFXtG4xP\r\nLM0wCrjgW60DRP48oKTYqJ+myQ7Rz9TvgHtS00pjp+pQmLD7pwetlBwi5piMCu2q\r\n1PG6dJFd3719v/RCa7uABEoUEnEy680aep4lGBNr2+Av933dRvI18c8llrVHDnrS\r\nkraHnmANlAvCa+AkENWfew==\r\n-----END PRIVATE KEY-----\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/shared/file-transfer/uploads/{{key_name}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"{{key_name}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Install Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"    // Parsing the response returned by the request.\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"sslo_key_jobid\", jsonData.id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{key_range}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filePath\": \"/var/config/rest/downloads/{{key_name}}\",\r\n    \"itemName\": \"{{key_name}}\",\r\n    \"itemPartition\": \"Common\",\r\n    \"command\": \"ADD_KEY\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Key Status / Store KeytID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"key_id\", jsonData.id);\r",
											"    pm.environment.set(\"key_link\", jsonData.keyReference.link);\r",
											"    pm.expect(jsonData.status).to.eq(\"FINISHED\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Range",
										"value": "{{key_range}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Length",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/certificate-management/{{sslo_key_jobid}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"certificate-management",
										"{{sslo_key_jobid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get chain_link based on sslchain_name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"// Extracting the token from the response and setting it as a global variable.\r",
											"\r",
											"jsonData.items.forEach(function(obj) {\r",
											"    if (obj.name != (pm.environment.get(\"sslchain_name\") + \".crt\")) {\r",
											"        return;\r",
											"    }\r",
											"    console.log(\"Name: \" + obj.name + \" ID: \" + obj.id); \r",
											"    pm.environment.set(\"chain_link\", obj.selfLink);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/sys/file/ssl-cert",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"sys",
										"file",
										"ssl-cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Client SSL Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful create SSL profile request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"client_ssl_id\", jsonData.id);\r",
											"        pm.environment.set(\"client_ssl_link\", jsonData.selfLink);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{clientsslprofile_name}}\",\r\n    \"partition\": \"Common\",\r\n    \"certKeyChain\": [\r\n        {\r\n            \"name\": \"{{clientsslprofile_name}}\",\r\n            \"certReference\": {\r\n                \"link\": \"{{cert_link}}\"\r\n            },\r\n            \"keyReference\": {\r\n                \"link\": \"{{key_link}}\"\r\n            }//,\r\n//    *** Commenting out if not using separate root / intermediate chain ***\r\n//            \"chainReference\": {\r\n//                \"link\": \"{{sslchain_link}}\"\r\n //           }\r\n        }  \r\n    ]\r\n    // Defaultsfromreference is used to specify default SSL profile to copy settings from\r\n    //\"defaultsFromReference\": []\r\n}"
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/profile/client-ssl",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"ltm",
										"profile",
										"client-ssl"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get VS ID & Profile Link based on vs_name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parsing the response returned by the request.\r",
											"var jsonData = pm.response.json();\r",
											"// Extracting the token from the response and setting it as a global variable.\r",
											"\r",
											"jsonData.items.forEach(function(obj) {\r",
											"    if (obj.name != pm.environment.get(\"vs_name\")) {\r",
											"        return;\r",
											"    }\r",
											"    console.log(\"Name: \" + obj.name + \" ID: \" + obj.id); \r",
											"    pm.environment.set(\"vs_id\", obj.id);\r",
											"    pm.environment.set(\"vs_link\", obj.selfLink);\r",
											"    pm.environment.set(\"vs_profile_link\", obj.profilesCollectionReference.link);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pass}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/virtual/",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"ltm",
										"virtual",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Attach Profile to Virtual Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful attachment request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pass}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{clientsslprofile_name}}\",\r\n    \"context\": \"clientside\",\r\n    \"partition\": \"Common\",\r\n    \"profileClientsslReference\": {\r\n        \"link\": \"{{client_ssl_link}}\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/virtual/{{vs_id}}/profiles",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"working-config",
										"ltm",
										"virtual",
										"{{vs_id}}",
										"profiles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get BigIP DeviceID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful retrieval request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"DeviceID_link\", jsonData.link);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pass}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"address\": \"10.10.30.11\"\r\n        //\"hostname\": \"bigip-a.example.local\"\r\n        //\"module\": \"adc-core\"\r\n}"
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/shared/device-reference-query",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"shared",
										"device-reference-query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Client SSL Profile to BigIP Devices",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [5000]);\r",
											"var moment =require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYY/MM/DD-HH:mm\")));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"DeploymentTask\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pass}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{clientsslprofile_name}}_{{currentdate}}\",\r\n    //    \"description\": \"some deploy task\",\r\n    \"deviceReferences\": [\r\n        {\r\n            \"link\": \"{{DeviceID_link}}\"\r\n        }\r\n    ],\r\n    \"reevaluate\": true,\r\n    \"skipDistribution\": false,\r\n    \"skipVerifyConfig\": true,\r\n    //\"skipCurrentConfigRefresh\": true,\r\n    \"deploySpecifiedObjectsOnly\": false,\r\n    \"verificationOptions\": {\r\n        \"skipCrossModuleVerification\": true\r\n    },\r\n    \"refreshSharedConfig\": true,\r\n    \"objectsToDeployReferences\": [\r\n        {\r\n            \"link\": \"{{vs_link}}\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/deploy-configuration",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"deploy-configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get VS ID & Profile Link based on vs_name Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.eq(\"FINISHED\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [60000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pass}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-Auth-Token",
										"type": "text",
										"value": "{{bigiq_a_auth_token}}"
									}
								],
								"url": {
									"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/deploy-configuration/{{DeploymentTask}}",
									"protocol": "https",
									"host": [
										"{{bigiq_a_mgmt}}"
									],
									"path": [
										"mgmt",
										"cm",
										"adc-core",
										"tasks",
										"deploy-configuration",
										"{{DeploymentTask}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Virtual Server Ops",
			"item": [
				{
					"name": "Get list of Virtual Servers",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{pass}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"type": "text",
								"value": "{{bigiq_a_auth_token}}"
							}
						],
						"url": {
							"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/virtual/",
							"protocol": "https",
							"host": [
								"{{bigiq_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"cm",
								"adc-core",
								"working-config",
								"ltm",
								"virtual",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VS ID & Profile Link based on vs_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parsing the response returned by the request.\r",
									"var jsonData = pm.response.json();\r",
									"// Extracting the token from the response and setting it as a global variable.\r",
									"\r",
									"jsonData.items.forEach(function(obj) {\r",
									"    if (obj.name != pm.environment.get(\"vs_name\")) {\r",
									"        return;\r",
									"    }\r",
									"    console.log(\"Name: \" + obj.name + \" ID: \" + obj.id); \r",
									"    pm.environment.set(\"vs_id\", obj.id);\r",
									"    pm.environment.set(\"vs_link\", obj.selfLink);\r",
									"    pm.environment.set(\"vs_profile_link\", obj.profilesCollectionReference.link);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{pass}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"type": "text",
								"value": "{{bigiq_a_auth_token}}"
							}
						],
						"url": {
							"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/virtual/",
							"protocol": "https",
							"host": [
								"{{bigiq_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"cm",
								"adc-core",
								"working-config",
								"ltm",
								"virtual",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach Profile to Virtual Server",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{pass}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"type": "text",
								"value": "{{bigiq_a_auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{clientsslprofile_name}}\",\r\n    \"context\": \"clientside\",\r\n    \"partition\": \"Common\",\r\n    \"profileClientsslReference\": {\r\n        \"link\": \"{{client_ssl_link}}\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/virtual/{{vs_id}}/profiles",
							"protocol": "https",
							"host": [
								"{{bigiq_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"cm",
								"adc-core",
								"working-config",
								"ltm",
								"virtual",
								"{{vs_id}}",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VS list of profiles based on vs_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parsing the response returned by the request.\r",
									"var jsonData = pm.response.json();\r",
									"// Extracting the token from the response and setting it as a global variable.\r",
									"\r",
									"jsonData.items.forEach(function(obj) {\r",
									"    if (obj.name != pm.environment.get(\"clientsslprofile_name\")) {\r",
									"        return;\r",
									"    }\r",
									"    console.log(\"Name: \" + obj.name + \" ID: \" + obj.id); \r",
									"    pm.environment.set(\"vs_clientsslprofile_link\", obj.profileClientsslReference.link);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{pass}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"type": "text",
								"value": "{{bigiq_a_auth_token}}"
							}
						],
						"url": {
							"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/working-config/ltm/virtual/{{vs_id}}/profiles",
							"protocol": "https",
							"host": [
								"{{bigiq_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"cm",
								"adc-core",
								"working-config",
								"ltm",
								"virtual",
								"{{vs_id}}",
								"profiles"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deployment",
			"item": [
				{
					"name": "Deploy Client SSL Profile to BigIP Devices",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{pass}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"type": "text",
								"value": "{{bigiq_a_auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"VSDeploy\",\r\n    //    \"description\": \"some deploy task\",\r\n    \"deviceReferences\": [\r\n        {\r\n            \"link\": \"{{DeviceID_link}}\"\r\n        }\r\n    ],\r\n    \"reevaluate\": true,\r\n    \"skipDistribution\": true,\r\n    \"skipVerifyConfig\": true,\r\n    //\"skipCurrentConfigRefresh\": true,\r\n    \"deploySpecifiedObjectsOnly\": false,\r\n    \"verificationOptions\": {\r\n        \"skipCrossModuleVerification\": true\r\n    },\r\n    \"refreshSharedConfig\": true,\r\n    \"objectsToDeployReferences\": [\r\n        {\r\n            \"link\": \"{{vs_link}}\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/adc-core/tasks/deploy-configuration",
							"protocol": "https",
							"host": [
								"{{bigiq_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"cm",
								"adc-core",
								"tasks",
								"deploy-configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DeviceID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"DeviceID_link\", jsonData.link);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{pass}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"type": "text",
								"value": "{{bigiq_a_auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        //\"address\": \"10.10.30.11\"\r\n        \"hostname\": \"bigip-a.bath.local\"\r\n        //\"module\": \"adc-core\"\r\n}"
						},
						"url": {
							"raw": "https://{{bigiq_a_mgmt}}/mgmt/cm/shared/device-reference-query",
							"protocol": "https",
							"host": [
								"{{bigiq_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"cm",
								"shared",
								"device-reference-query"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{bigiq_a_auth_token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-F5-Auth-Token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const loginRequest = {",
					"    url: 'https://' + pm.environment.get(\"bigiq_a_mgmt\") + '/mgmt/shared/authn/login',",
					"    method: 'POST',",
					"    header: 'Content-Type: application/json',",
					"    body: {",
					"        mode: 'application/json',",
					"        raw: JSON.stringify({        ",
					"            \"username\": pm.environment.get(\"user\"),",
					"            \"password\": pm.environment.get(\"bigiq_pass\"),",
					"            \"loginProviderName\":\"tmos\"",
					"        })",
					"    }",
					"};",
					"",
					"",
					"pm.sendRequest(loginRequest, function (err, response) {",
					"    pm.environment.set(\"bigiq_a_auth_token\", response.json().token.token);",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "c34e11a4-d8cd-41cb-8d99-f06c7b441f83",
			"value": ""
		}
	]
}